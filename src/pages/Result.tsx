import type { NextPage } from 'next'
import Head from 'next/head'
import AppBarM from '../components/appBar';
import { Avatar, Box, Typography, Button, Grid, Modal } from '@mui/material';
import { useDispatch, useSelector } from '../redux/store';
import Image from 'next/image';
import { useRouter } from 'next/router';
import { useState } from 'react';
interface ISumary {
  title: string;
  id: number;
  text: string;
}
const style = {
  position: 'absolute',
  top: '50%',
  left: '50%',
  transform: 'translate(-50%, -50%)',
  width: 400,
  bgcolor: 'background.paper',
  border: '2px solid #000',
  boxShadow: 24,
  pt: 2,
  px: 4,
  pb: 3,
};
const Result: NextPage = () => {
  const { dataPetForm, dataUserForm } = useSelector((state) => state.dataUser);
  const [open, setOpen] = useState(false);
  const router = useRouter();
  const handleOpen = () => {
    setOpen(true);
  };
  const handleClose = () => {
    setOpen(false);
  };
  const personalData: ISumary[] = [
    {
      id: 1,
      title: "Insurance:",
      text: dataUserForm.insurance
    },
    {
      id: 2,
      title: "Name:",
      text: dataUserForm.name + " " + dataUserForm.lastName
    },
    {
      id: 3,
      title: "Email:",
      text: dataUserForm.email
    },
    {
      id: 4,
      title: "City:",
      text: dataUserForm.city
    },
    {
      id: 5,
      title: "Address:",
      text: dataUserForm.address
    },
  ]
  const petData: ISumary[] = [
    {
      id: 1,
      title: "Name:",
      text: dataPetForm.namepet
    },
    {
      id: 1,
      title: "Birthday:",
      text: dataPetForm.datepet.toString().split(" ")[2] +" "+ dataPetForm.datepet.toString().split(" ")[1]
    },
    {
      id: 3,
      title: "Race:",
      text: dataPetForm.racePet
    },
    {
      id: 4,
      title: "Age:",
      text: dataPetForm.agePet + " years"
    },
    {
      id: 5,
      title: "Weight:",
      text: dataPetForm.weightPet + " kg"
    }
  ]
  
  return (
    <>
      <Head>
        <title>INSURANCE</title>
        <meta name="description" content="Generated by Violeta" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppBarM title=' INSURANCE' />
      <Box display="flex" justifyContent="center" marginTop="10px">
        <Avatar alt='Remy Sharp' src='/static/insurance.png' style={{
          display: "flex", width: '80px',
          height: '80px'
        }}
        />
      </Box>
      <Typography align='center'
        color='#0C3640'
        sx={{ fontSize: '20px', }}> <strong>Prima:</strong> $5 per month</Typography>

      <Typography align='center'
        color='#0C3640'
        sx={{ fontSize: '24px', }}>Summary</Typography>

      <Grid container marginX="30px" justifyContent="center">
        <Grid item xs={6} sm={5}>
          <Box role="group" flexDirection="column"
            borderColor="red"
            border={0.5}
            sx={{
              alignItems: 'left',
              display: 'flex',
              p: 2,
            }}>

            <Typography align='justify'
              color='#0C3640'
              sx={{ fontSize: '15px', }}> <strong>Personal Information:</strong></Typography>
            {
              personalData?.map((Summary) => (
                <Typography align='justify'
                  color='#000000'
                  key={Summary.id}
                  sx={{ fontSize: '14px', }}><strong>{Summary.title}</strong> {Summary.text}</Typography>

              ))
            }
          </Box>
        </Grid>
        <Grid item xs={6} sm={5}>
          <Box flexDirection="column" display="flex" alignItems="center">
            <Image
              src={'/static/pets-allowed.png'}
              width={100}
              height={100}
              layout="fixed"
            />
            <Typography color='#0C3640' sx={{ fontSize: '14px' }}>Pets insurance</Typography>
          </Box>
        </Grid>
        <Grid item xs={6} sm={5}>
          <Box role="group" flexDirection="column"
            borderColor="red"
            border={0.5}
            sx={{
              alignItems: 'left',
              display: 'flex',
              p: 2,
            }}>
            <Typography align='justify'
              color='#0C3640'
              sx={{ fontSize: '15px', }}><strong> Pet Information:</strong></Typography>
            {
              petData?.map((Summary) => (
                <Typography align='justify'
                  color='#000000'
                  key={Summary.id}
                  sx={{ fontSize: '14px', }}><strong>{Summary.title}</strong> {Summary.text}</Typography>

              ))
            }
            <Typography align='justify'
              color='#000000'
              sx={{ fontSize: '14px', }}><strong>Select:</strong>
              {dataPetForm.selection.toString()}
            </Typography>
          </Box>
        </Grid>
        <Grid item xs={6} sm={5}>
          <Box display="flex" justifyContent="center">
            <Image
              src={`data:image/jpeg;base64,${dataPetForm.image}`} 
               width={100}
              height={100}
            /> 

          </Box>
        </Grid>
      </Grid>
      <Box display="flex" justifyContent="center" marginY="10px">
        <Button
          variant="contained"
          color="primary"
          onClick={handleOpen}
        >
          Finish
        </Button>
      </Box>
      <Modal
        open={open}
        onClose={handleClose}
        aria-labelledby="parent-modal-title"
        aria-describedby="parent-modal-description"
      >
        <Box sx={{ ...style, width: 400 ,alignItems: 'center' }} display="flex"flexDirection="column">
          <Image
            src={'/static/Thanks.png'}
            width={100}
            height={100}
            layout="fixed"
          />
          <Typography align='center'
            color='#0C3640'
            sx={{ fontSize: '15px', }}><strong> Thank you! for filling out the form.</strong></Typography>

          <Button
            variant="contained"
            sx={{ borderRadius: '15px', marginTop: '10px', padding: '10px', color: 'white', backgroundColor: '#0B132B', '&:hover': { backgroundColor: '#0B132B' } }}
            onClick={() => {
              router.push('/')
            }}
          >
            Home
          </Button>
        </Box>
      </Modal>
    </>
  )
}

export default Result
